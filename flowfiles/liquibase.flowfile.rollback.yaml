###
### This flowfile is intended to highlight capabilities of Liquibase Pro
### Review and update prior to use
###
### Liquibase version: 4.29.2+
###
### Liquibase sales: https://www.liquibase.com/contact-us
### Liquibase support: https://support.liquibase.com/knowledge
###

### 
### Prior to running the following files must exist in repository
###
### 1. liquibase.flowfile.yaml
###    This flow file
###    https://docs.liquibase.com/commands/flow/flow.html
###
### 2. liquibase.checks-settings.conf
###    Liquibase quality checks configuration file
###    https://docs.liquibase.com/commands/quality-checks/home.html
###
### 3. changelog.main.xml
###    Root Liquibase changelog file
###    https://docs.liquibase.com/concepts/changelogs/home.html
###

###
### Global variables used in the flowfile
###
globalVariables:
  ###
  ### These variables are typically set via automation tools (see pipeline examples)
  ###
  ### LIQUIBASE_SEARCH_PATH: REQUIRED
  ### Use absolute paths when using Liquibase's Docker container
  ### LIQUIBASE_SEARCH_PATH: "/liquibase/changelog"
  ###
  ### LIQUIBASE_COMMAND_CHANGELOG_FILE: REQUIRED
  ### Root Liquibase changelog file
  ### LIQUIBASE_COMMAND_CHANGELOG_FILE: "changelog.main.xml"
  ###
  ### LIQUIBASE_COMMAND_TAG: REQUIRED
  ### Should be a unique identifier and change each run (e.g., job/build number)
  ### LIQUIBASE_COMMAND_TAG: "12345"
  ###
  ### LB_BASE_DIR: REQUIRED
  ### The directory to write Liquibase output (e.g., logs, reports)
  ### LB_BASE_DIR: "/liquibase/changelogs"
  ###
  ### LB_ENVIRONMENT: REQUIRED
  ### LB_ENVIRONMENT should be the environment within the pipeline to operate on (e.g., DEV, UAT, PROD)
  ### LB_ENVIRONMENT: "DEV"
  ###
  ### Secrets: REQUIRED
  ### These values should be pulled from a secure vault via pipeline or Liquibase Pro extension
  ### https://docs.liquibase.com/tools-integrations/extensions/secrets-management/home.html
  ###
  ### LIQUIBASE_COMMAND_URL: "jdbc:h2:tcp://localhost:9090/mem:dev"
  ### LIQUIBASE_COMMAND_USERNAME: "dbuser"
  ### LIQUIBASE_COMMAND_PASSWORD: "letmein"
  ### LIQUIBASE_LICENSE_KEY: "12345"
  ###
  ### Structured logging
  ### Liquibase logs can be ingested by any standard observability tool (e.g., CloudWatch, Datadog, Elastic, Splunk)
  ### https://docs.liquibase.com/tools-integrations/observability/structured-logging.html
  ###
  ### LIQUIBASE_LOG_FILE: "liquibase.log.json"
  ### LIQUIBASE_LOG_FORMAT: "json"
  ### LIQUIBASE_LOG_LEVEL: "warning"
  ### LIQUIBASE_MIRROR_CONSOLE_MESSAGES_TO_LOG: "false"
  ###
  ### Other settings
  ### LIQUIBASE_COMMAND_CHECKS_RUN_CHECKS_OUTPUT: "issues"
  ### LIQUIBASE_SHOW_BANNER: "false"
  ###
  ### Files
  ###
  SNAPSHOT_FILE: "snapshots/Snapshot_${LB_ENVIRONMENT}.json"
  ###
  ### Operational Reports
  ### Liquibase Pro creates operational reports for certain commands
  ### These reports can be copied to a shared location for distribution to users (e.g., S3)
  ### https://docs.liquibase.com/tools-integrations/observability/operation-reports.html
  ###
  ROLLBACK_REPORT: "Rollback_${LB_ENVIRONMENT}.html"
  ###
  ### Workflow features
  ### Set these flags to T/F to turn Liquibase Pro features on/off
  ### These flags can also be set dynamically by an automation tool based on user input, environment, team, etc.
  ###
  LB_SHOW_UPDATE_SQL: "F"
  LB_BASE_DIR: "."

###
### Stages to execute
###
stages:
  Default:
    actions:
      #
      # Rollback database
      # https://docs.liquibase.com/commands/rollback/rollback.html
      #
      - type: liquibase
        command: rollback
        cmdArgs: { tag: "${LIQUIBASE_COMMAND_TAG}" }        

###
### Always execute
###
endStage:
  actions:
    #
    # Create updated snapshot
    # https://docs.liquibase.com/commands/inspection/snapshot.html
    #
    - type: liquibase
      command: snapshot
      globalArgs: { include-relations-for-computed-columns: "true", outputfile: "${LB_BASE_DIR}/${SNAPSHOT_FILE}" }
      cmdArgs: { snapshotFormat: "json" }    
  
    #
    # Show deployed changes
    # https://docs.liquibase.com/commands/change-tracking/history.html
    #
    - type: liquibase
      command: history